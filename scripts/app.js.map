{"version":3,"file":"public/javascripts/app.js","sources":["app/app.coffee","app/erdapfel.coffee"],"names":[],"mappings":"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","sourcesContent":["window.cg = createGrid = () -> document.body.appendChild(document.createElement('script')).src='http://peol.github.io/960gridder/releases/1.3.1/960.gridder.js'\n# cg()\n\nslider = new SimpleSlider document.getElementById('slider'),\n  # autoPlay: false\n  # transitionProperty: 'right'\n  autoPlay: true\n  transitionDelay: 10\n  transitionDuration: 1\n  transitionProperty: 'opacity'\n  startValue: 0\n  visibleValue: 1\n  endValue: 0\n\n# $('.slider-prev').on 'click', (e) ->\n#   slider.prev()\n#   e.preventDefault()\n\n# $('.slider-next').on 'click', (e) ->\n#   slider.next()\n#   e.preventDefault()\n\n$('.slide-button').on 'click', (e) ->\n  value = $(e.currentTarget).data('value')\n  slider.change value\n  $('.slide-button').removeClass('active')\n  $(e.currentTarget).addClass('active')\n\n# scroll = new IScroll('.travel-destination',\n#   mouseWheel: true\n#   # scrollbars: true\n# )\n\nErdapfel = require 'erdapfel'\n\nwindow.globe = globe = new Erdapfel 'map',\n  width: 700\n  height: 700\n  radius: 200\n  noZoom: true\n  cameraPositionZ: 500\n  texture: 'images/NE.jpg'\n\n$.getJSON 'data/countries.geojson', (data) =>\n  for feature in data.features\n    [lng, lat] = feature.geometry.coordinates\n\n    element = globe.addElement lat, lng\n    globe.addLabel element, feature.properties.title\n","module.exports = class Erdapfel\n  labels: []\n\n  constructor: (container, options) ->\n    @options = options\n\n    @width = options.width\n    @height = options.height\n    @radius = options.radius\n\n    @container = document.getElementById container\n    @projector = new THREE.Projector()\n    @clock = new THREE.Clock()\n\n    @camera = new THREE.PerspectiveCamera 60, @width / @height, 1, 10000\n    @camera.position.z = options.cameraPositionZ\n\n    @controls = new THREE.OrbitControls @camera\n    @controls.addEventListener 'change', @render\n    @controls.noZoom = options.noZoom\n    @controls.autoRotate = true\n\n    @scene = new THREE.Scene()\n\n    @group = new THREE.Object3D()\n    @scene.add @group\n\n    @addGlobe()\n\n    @renderer = new THREE.WebGLRenderer alpha: true\n    @renderer.setClearColor 0x000000, 0\n    @renderer.setSize @width, @height\n\n    @container.appendChild @renderer.domElement\n    window.addEventListener 'resize', @onWindowResize, false\n    @container.onclick = (event) => @controls.autoRotate = false\n\n    @animate()\n\n  addGlobe: () =>\n    texture = @options.texture\n    loader = new THREE.TextureLoader()\n    loader.load texture, (texture) =>\n      geometry = new THREE.SphereGeometry @radius, 32, 32 # radius, widthSegments, heightSegments,\n      material = new THREE.MeshBasicMaterial\n        map: texture\n        overdraw: 0.5\n\n      mesh = new THREE.Mesh geometry, material\n      @group.add mesh\n\n  addElement: (lat, lon) =>\n    sphere = new THREE.SphereGeometry 2 # radius, widthSegments, heightSegments\n    material = new THREE.MeshBasicMaterial color: 0xFF0000\n    mesh = new THREE.Mesh sphere, material\n\n    [x, y, z] = @latLongToVector3 lat, lon, @radius\n    mesh.position.set x, y, z\n    @group.add mesh\n    mesh\n\n  addLabel: (mesh, html) =>\n    element = document.createElement 'div'\n    element.setAttribute \"class\", \"erdepfel-label\"\n    element.innerHTML = html\n\n    document.getElementById(\"labels\").appendChild element\n\n    label =\n      mesh: mesh\n      element: element\n    \n    @labels.push label\n    label\n\n  animate: =>\n    requestAnimationFrame @animate\n    @render()\n    @controls.update()\n\n  render: =>\n    @renderer.render @scene, @camera\n    @handleLabels()\n\n  handleLabels: =>\n    i = 0\n    while i < @labels.length\n      label = @labels[i]\n      mesh = label.mesh\n      vector = @toXYCoords mesh.position, @camera, @container\n\n      lx = vector.x + 5\n      ly = vector.y\n\n      label.element.style.left = lx + \"px\"\n      label.element.style.top = ly + \"px\"\n\n      L = @distance mesh.position, @camera.position\n      label.element.style.display = if L > @options.cameraPositionZ then 'none' else 'block'\n\n      i++\n\n  # convert the positions from a lat, lon to a position on a sphere.\n  latLongToVector3: (lat, lon, radius) ->\n    phi = (lat) * Math.PI/180\n    theta = (lon-180) * Math.PI/180\n\n    x = -(radius) * Math.cos(phi) * Math.cos(theta)\n    y = (radius) * Math.sin(phi)\n    z = (radius) * Math.cos(phi) * Math.sin(theta)\n\n    [x, y, z]\n\n  toXYCoords: (position, camera) =>\n    vector = @projector.projectVector(position.clone(), camera)\n    vector.x = (vector.x + 1)/2 * @container.clientWidth\n    vector.y = -(vector.y - 1)/2 * @container.clientHeight\n\n    vector\n\n  # distance between two points in 3 dimensional space\n  distance: (position1, position2) =>\n    Math.sqrt Math.pow((position1.x - position2.x), 2) + \\\n              Math.pow((position1.y - position2.y), 2) + \\\n              Math.pow((position1.z - position2.z), 2)\n\n  onWindowResize: =>\n    windowHalfX = @width / 2;\n    windowHalfY = @height / 2;\n\n    @camera.aspect = @width / @height\n    @camera.updateProjectionMatrix()\n\n    @renderer.setSize @width, @height\n    @render()\n"]}